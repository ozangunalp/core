Chameleon structure
===================

 As Chameleon promotes conventions, it promotes a common directory structure:

 * `bin` contains the launcher and its dependencies
 * `core` contains the key OSGi bundles
 * `runtime` contains so-called _technical services_ and external libraries. It can also contains _cfg_ files
 representing OSGi config admin's configurations. By default, this directory is _watched_ at runtime,
 reflecting changes in the OSGi runtime.
 * `application` contains the application's bundles and configurations. By default, this directory is _watched_ at runtime,
 reflecting changes in the OSGi runtime.
 * `conf` contains logging and the platform configuration

By default log files are created in the `logs` directory.

<img src="img/structure.png" style="width: 80%;">

The bin directory
-----------------

 The `bin` directory contains the core launcher and its dependency.

The core directory
------------------

 The `core` directory contains core bundles. Once launched, these bundles are never updated,
 they are the foundation of your application. Updating them requires a restart of the application. These bundles
 starts before any other bundles.

 You can add fundamental static bundles is this directory. By default, Apache Felix iPOJO,
 Ow2 Shelbie and Apache Felix Configuration Admin are deployed.

The runtime directory
---------------------

 The `runtime` directory contains bundles and configuration files. By default, this bundle is not _watched_,
 but bundles can be updated manually.

 Traditionally these bundles provide technical services used by your application. For instance,
 it would be the place of the event admin or custom deployers.

 You can enable the _watching_ on this directory. In this case, change in the directory will be reflected within the
 OSGi framework.

The application directory
-------------------------

The `application` directory contains the bundles and configuration files from your application. By default,
this directory is _watched_. So changes are reflected.

The conf directory
------------------

the `conf` directory contains all the required configurations:

* OSGi framework configuration
* System properties
* Log backend configuration






